<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="66cbf9a3-993b-49ec-81c6-f0d7bd59e8be" name="Changes" comment="second commit&#10;DB 추가 &#10;- CRUD 구현&#10;* build.gradle&#10;-MySQL connector dependency 추가&#10; (DB와 연결을 위한 드라이버 포함)&#10;* ProductRepository (added)&#10; - ProductServer로부터 호출을 받아&#10; - db와의 CRUD 구현&#10;* ProductServer (modified)&#10; - 기존에는 vector 자료구조인 products에 인메모리 형식으로 저장하던 product를 db로 변경">
      <change afterPath="$PROJECT_DIR$/src/main/java/productmanager/db/ProductRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/productmanager/client/ProductClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/productmanager/client/ProductClient.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/productmanager/server/ProductServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/productmanager/server/ProductServer.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="productmanage" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="productmanage" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="productmanage" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
                <item name="compileClasspath" type="62daadca:ExternalSystemViewDefaultContributor$DependencyScopeExternalSystemNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="module-info" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="e6a82bc07716b3b2e0e473f7c16d391fdbe3ea41" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RESET_MODE" value="HARD" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2IqLaE5DHieztR1HiR1LEPZQAo6" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Downloaded.Files.Path.Enabled": "false",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "false",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "last_opened_file_path": "C:/projects/java/productmanage",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\projects\java\productmanage\src\main\java\db" />
      <recent name="C:\projects\java\productmanage\src\main\java" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\projects\java\productmanage\src\main\java\db\images" />
      <recent name="C:\projects\java\productmanage\src\main\java\db" />
    </key>
  </component>
  <component name="RunManager" selected="Application.ProductServer">
    <configuration name="ProductClient" type="Application" factoryName="Application" singleton="false" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="productmanager.client.ProductClient" />
      <module name="productmanage.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="productmanager.client.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="productmanager.server.ProductServer" />
      <module name="productmanage.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="productmanager.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserCRUDExample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="db.UserCRUDExample" />
      <module name="productmanage.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="db.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserSelectExample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="db.UserSelectExample" />
      <module name="productmanage.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="db.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="connectionExample" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="db.connectionExample" />
      <module name="productmanage.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="db.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.connectionExample" />
      <item itemvalue="Application.ProductClient" />
      <item itemvalue="Application.ProductServer" />
      <item itemvalue="Application.UserCRUDExample" />
      <item itemvalue="Application.UserSelectExample" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ProductClient" />
        <item itemvalue="Application.ProductServer" />
        <item itemvalue="Application.UserSelectExample" />
        <item itemvalue="Application.UserCRUDExample" />
        <item itemvalue="Application.connectionExample" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="66cbf9a3-993b-49ec-81c6-f0d7bd59e8be" name="Changes" comment="" />
      <created>1670904229663</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1670904229663</updated>
    </task>
    <task id="LOCAL-00001" summary="first commit&#10;- 서버와 클라이언트 간 CRUD 기능 구현 완료">
      <created>1670905789064</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1670905789064</updated>
    </task>
    <task id="LOCAL-00002" summary="second commit&#10;DB 추가 &#10;- CRUD 구현&#10;* build.gradle&#10;-MySQL connector dependency 추가&#10; (DB와 연결을 위한 드라이버 포함)&#10;* ProductRepository (added)&#10; - ProductServer로부터 호출을 받아&#10; - db와의 CRUD 구현&#10;* ProductServer (modified)&#10; - 기존에는 vector 자료구조인 products에 인메모리 형식으로 저장하던 product를 db로 변경">
      <created>1671152519069</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1671152519069</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="first commit&#10;- 서버와 클라이언트 간 CRUD 기능 구현 완료" />
    <MESSAGE value="second commit&#10;DB 추가 &#10;- CRUD 구현&#10;* build.gradle&#10;-MySQL connector dependency 추가&#10; (DB와 연결을 위한 드라이버 포함)&#10;* ProductRepository (added)&#10; - ProductServer로부터 호출을 받아&#10; - db와의 CRUD 구현&#10;* ProductServer (modified)&#10; - 기존에는 vector 자료구조인 products에 인메모리 형식으로 저장하던 product를 db로 변경" />
    <option name="LAST_COMMIT_MESSAGE" value="second commit&#10;DB 추가 &#10;- CRUD 구현&#10;* build.gradle&#10;-MySQL connector dependency 추가&#10; (DB와 연결을 위한 드라이버 포함)&#10;* ProductRepository (added)&#10; - ProductServer로부터 호출을 받아&#10; - db와의 CRUD 구현&#10;* ProductServer (modified)&#10; - 기존에는 vector 자료구조인 products에 인메모리 형식으로 저장하던 product를 db로 변경" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.sql.SQLNonTransientConnectionException" package="java.sql" />
          <option name="timeStamp" value="1" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>